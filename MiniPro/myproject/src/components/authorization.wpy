<template lang="wxml">
    <view class="mask" wx:if="{{inviteShow}}" @tap.stop="closeInvite" catchtouchmove="{{false}}"></view>
    <view class="auth-alert {{inviteShow?'show':'hide'}}" catchtouchmove="{{false}}">
      <text class="title">需要登录后才能继续操作</text>
      <button class="auth" lang="zh-CN" open-type="getUserInfo" bindgetuserinfo="goLogin" @tap="closeLayer">授权登录</button>  
  	</view>
	</view>
  <toast />
</template>

<script>
import wepy from 'wepy';
import U from '@/utils/utils';
// import api from '@/api/api';
import toast from './Toast';
import { TOKEN, EXPIRETOKEN } from '@/utils/storageKey';

export default class Auth extends wepy.component {
  props = {};

  components = { toast };
  data = {
    inviteShow: false
  };

  methods = {
    closeLayer() {
      this.inviteShow = false;
    },
    openLayer() {
      this.inviteShow = true;
    },
    /**
     * 授权拿code
     * code调api换accessToken
     * 存用户信息
     */
    async goLogin(e) {
      if (e.detail.errMsg === 'getUserInfo:ok') {
        // let _this = this;
        const loginInfo = await wepy.login();
        if (loginInfo.code) {
          wepy.setStorageSync('userInfo', e.detail.userInfo);
          const systemInfo = wepy.getSystemInfoSync();
          wepy.setStorageSync('sysInfo', systemInfo);
          const weChat = await api.WeChatSns({
            /**
             * 这里根据后台需要字段配置，
             * 默认code、appid都传，
             */
            parma: {
              code: loginInfo.code,
              appid: wepy.$instance.globalData.appid
            }
          });
          let { code, data } = weChat;
          if (code == '-999')
            return this.$invoke('toast', 'show', '登录过期、请重新登录'); //登录过期
          if (code !== '1') return false;
        } else {
          U.error('授权失败');
          this.inviteShow = true;
        }
      }
    }
  };
}
</script>

<style lang="scss">
.mask {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: rgba(0, 0, 0, 0.5);
  z-index: 100;
}
.auth-alert {
  width: 648rpx;
  height: 334rpx;
  border-radius: 10rpx;
  position: fixed;
  top: 300rpx;
  left: 0;
  right: 0;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
  background-color: #fff;
  z-index: 101;
  opacity: 0;
  transform: scale(0);
  transition: all 0.5s ease;
  .title {
    line-height: 250rpx;
    font-size: 34rpx;
    font-weight: 600;
    color: #6a6a6a;
  }
  .auth {
    background-color: rgb(89, 240, 140);
    font-size: 34rpx;
    color: #000;
    font-weight: 600;
  }
}
.show {
  opacity: 1;
  transform: scale(1);
}
.hide {
  opacity: 0;
  transform: scale(0);
}
</style>
